<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="en" lang="en">
<head>
<title>8.5.1 Quiz - Answers</title>
<link rel="stylesheet" type="text/css" href="css/epub.css" />
</head>
<body>
<section class="sect2">
    <h4 id="ch08_5_1_h" class="title">8.5.1 Quiz - Answers</h4>
    <ol class="quiz">
        <li><p>The <code class="inline">now()</code> function returns a floating-point number representing the current time as the number of seconds since the Unix epoch (January 1, 1970, 00:00:00 UTC). </p></li>
        <li><p>The code <code class="inline">timeval(2025, 1, 25, 13, 5, "Europe/Kyiv");</code> constructs a datetime object representing the specified date and time in the Europe/Kyiv time zone and directly returns a UNIX timestamp in the response. This differs from the <code class="inline">datetime()</code> function, which returns an ISO 8601 formatted string representation of the datetime object. To obtain a UNIX timestamp from a datetime object you can convert the datetime object to an integer using the <code class="inline">int()</code> function.</p></li>
        <li><p>The property definition <code class="inline">"int&lt;-1:1&gt;?"</code> allows integer values from -1 to 1, inclusive. The question mark (<code class="inline">?</code>) denotes that the property can also be left <code class="inline">nil</code>. So, valid options are <code class="inline">-1</code>, <code class="inline">0</code>, <code class="inline">1</code> and <code class="inline">nil</code>.</p></li>
        <li><p>The <code class="inline">cancel()</code> method prevents a task from executing while keeping it in the list. The task's error state will be set to <code class="inline">cancelled_err</code>. This is different from using the <code class="inline">del()</code> method, which completely removes the task from the list, including its data.</p></li>
        <li><p>Option “b” is the correct approach for creating a daily repeating task. The <code class="inline">again_in()</code> method with a <code class="inline">"days"</code> argument allows you to define a relative delay from the current time. In this case, a recurring delay of 1 day, effectively scheduling the task to run every day until it is explicitly canceled. While <code class="inline">again_at()</code> can be used, it schedules the task for a specific time on that date only. Using <code class="inline">again_at(datetime(2025, 1, 1))</code> would run the task once on January 1, 2025, not daily. In fact, if the current date is past January 1, 2025, it would indeed result in a <code class="inline">value_err</code> <em>("start time out-of-range")</em> error.</p></li>
        <li><p>The following line of code would accomplish this task:</p>
            <p class="quizcode"><code class="inline">tasks().every(|task| is_nil(task.err()));</code></p>
            <p>The function <code class="inline">tasks()</code> returns a list with all tasks and
                the <code class="inline">every()</code> method on the list iterates through each task and only
                returns <code class="inline">true</code> if the provided closure evaluates to <code class="inline">true</code> for
                every task. Within the closure, <code class="inline">is_nil(task.err())</code> checks if
                the <code class="inline">err()</code> method of each task returns with <code class="inline">nil</code>.</p>
        </li>
        <li><p>Statement “c” is correct: <em>datetime</em> and <em>timeval</em> represent the same information, but differ in response format. The <em>datetime</em> and <em>timeval</em> types offer only second precision. Both types are immutable, so attempting to change their time zone creates a new object reflecting the change. </p></li>
    </ol>
</section>
</body>
</html>
