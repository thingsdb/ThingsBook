<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="en" lang="en">
<head>
<title>12.5.1 Quiz - Answers</title>
<link rel="stylesheet" type="text/css" href="css/epub.css" />
</head>
<body>
<section class="sect2">
    <h4 id="ch12_5_1_h" class="title">12.5.1 Quiz - Answers</h4>
    <ol class="quiz">
        <li><p>No one will receive the message <code class="inline">"Hello World"</code> because the statement lacks a room ID. Rooms require an ID for joining, and without one, a program cannot join the intended room.</p></li>
        <li><p>The absolute requirement for joining a room in ThingsDB is the <code class="inline">JOIN</code> access flag. While the <code class="inline">QUERY</code> flag is not strictly mandatory, it offers valuable utility. It allows you to retrieve the room ID dynamically using a query.</p></li>
        <li><p>The <code class="inline">id()</code> method is directly available on the room object and returns the ID as integer. While technically possible, extracting the ID from the string representation of the room object is less efficient and generally discouraged. The room object itself returns a string in the format <code class="inline">room:ID</code>.</p></li>
        <li><p>Answer “b”. The most appropriate point to synchronize the state with the current collection in a <code class="inline">Room</code> implementation is <code class="inline">on_join(..)</code>. While the <code class="inline">on_init(..)</code> could be used for initial state retrieval, it would not account for potential changes after a connection loss. The <code class="inline">on_join(..)</code> handler is called every time a room is joined, making it ideal for ensuring the latest state is retrieved from the collection.</p></li>
        <li><p>All event names are valid <em>except for empty strings</em> (answer “d”). Remember, event names need at least one character and cannot exceed 255 characters.</p></li>
        <li><p>The following ThingsDB code could have triggered the <code class="inline">"add-two-numbers"</code> event, leading to the observed output:</p>
            <p class="quizcode"><code class="inline">.math.emit("add-two-numbers", 8, 5);</code></p>
        </li>
    </ol>
</section>
</body>
</html>
