<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="en" lang="en">
<head>
<title>11.6 Quiz - Challenge Your Understanding</title>
<link rel="stylesheet" type="text/css" href="css/epub.css" />
</head>
<body>
<section class="sect1">
    <h3 id="ch11_6_h" class="title">11.6 Quiz - Challenge Your Understanding</h3>
    <ol class="quiz">
        <li><p>Select all statements that are true about enumerators:</p>
            <ol>
                <li>Members of an enumerator must be of the same type.</li>
                <li>An enumerator is created using the <code class="inline">new_enum()</code> function.</li>
                <li>Members must have unique names, and their values must also be unique.</li>
                <li>Enumerators are immutable, meaning you cannot modify members or methods after creation.</li>
            </ol>
        </li>
        <li><p>While creating an enumerator, why is it recommended to use <code class="inline">mod_enum()</code> at least once?</p></li>
        <li><p>Imagine you have a variable <code class="inline">x</code> containing the name of a member within the <code class="inline">Colors</code> enumerator. How would you retrieve the corresponding member using that variable?</p></li>
        <li><p>What built-in methods are available on every member of an enumerator?</p></li>
        <li><p>What does the <code class="inline">*</code> prefix flag signify when used in a type property definition for an enumerator? Explain its purpose and impact on data representation.</p></li>
        <li><p>Write a statement using a regular expression that checks if the string stored in the variable <code class="inline">animal</code> matches either <code class="inline">"Dog"</code> or <code class="inline">"Cat"</code>, regardless of case sensitivity.</p></li>
        <li><p>Which code snippet accurately initializes the <code class="inline">Colors</code> enumerator with <code class="inline">R</code>, <code class="inline">G</code>, and <code class="inline">B</code> members so they can be independently used as distinct flags for bitwise operations?</p>
            <ol>
                <li><code class="inline">set_enum("Colors", {R: 0, G: 1, : 2});</code></li>
                <li><code class="inline">set_enum("Colors", {R: "#FF0000", G: "#00FF00", B: "#0000FF"});</code></li>
                <li><code class="inline">set_enum("Colors", {R: 1, G: 2, : 3});</code></li>
                <li><code class="inline">set_enum("Colors", {R: 1&lt;&lt;0, G: 1&lt;&lt;1, : 1&lt;&lt;2});</code></li>
            </ol>
        </li>
    </ol>
</section>
</body>
</html>